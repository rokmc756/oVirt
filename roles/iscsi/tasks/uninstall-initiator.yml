---
- name: Check the Device Name Attached
  shell: |
    iscsiadm -m session -P 3 | grep 'Target\|disk' | grep Attached | awk '{print $4}'
  register: attach_device_name
  ignore_errors: true
- debug: msg={{ attach_device_name }}


- name: Confirm the Established Session
  shell: |
    iscsiadm -m session -o show
  register: confirm_established_session
  ignore_errors: true
- debug: msg={{ confirm_established_session }}


- name: Kill iSCSI Session
  shell: |
    iscsiadm --mode node -T {{ _iscsi.target.iqn }}:{{ _iscsi.target.os_version }}.{{ item.name }} \
    -p {{ hostvars[groups['iscsi'][0]].ansible_ssh_host }}:3260 -u
  register: kill_iscsi_session
  ignore_errors: true
  with_items: "{{ _iscsi.target.disks }}"
- debug: msg={{ kill_iscsi_session }}


- name: Remove Node to Prevent the Session from Re-Establishing
  shell: |
    iscsiadm --mode node -o delete -T {{ _iscsi.target.iqn }}:{{ _iscsi.target.os_version }}.{{ item.name }}
  register: remove_node_session
  ignore_errors: true
  with_items: "{{ _iscsi.target.disks }}"
- debug: msg={{ remove_node_session }}
# command: iscsiadm -m session


- name: Delete iSCSI Session Directory to Prevent Re-Establish Connection
  file:
    path: "/var/lib/iscsi/nodes/{{ _iscsi.target.iqn }}:{{ _iscsi.target.os_version }}.{{ item.name }}"
    state: absent
  register: delete_iscsi_session_directory
  ignore_errors: true
  with_items: "{{ _iscsi.target.disks }}"
- debug: msg={{ delete_iscsi_session_directory }}


- name: Stop and Disable iSCSId
  systemd:
    name: "{{ item }}"
    state: stopped
  register: stop_iscsid
  ignore_errors: true
  until: stop_iscsid is succeeded
  retries: 3
  delay: 10
  with_items:
    - "iscsid"
- debug: msg={{ stop_iscsid }}


- name: Delete Config Files of iSCSI Initiator
  file:
    path: "{{ item }}"
    state: absent
  register: delete_iscsi_initator_config_files
  ignore_errors: true
  with_items:
    - "/etc/iscsi/iscsid.conf"
    - "/etc/iscsi/initiatorname.iscsi"
    - "/etc/iscsi/nodes"
    - "/etc/iscsi/send_targets"
- debug: msg={{ delete_iscsi_initator_config_files }}


- name: Uninstall iSCSI Initiator
  package:
    name: iscsi-initiator-utils
    state: absent
  register: uninstall_iscsi_initiator
  ignore_errors: true
- debug: msg={{ uninstall_iscsi_initiator }}
  when: print_debug == true

