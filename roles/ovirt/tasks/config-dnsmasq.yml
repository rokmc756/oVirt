---
- name: Install DNSMaq Package
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "dnsmasq"
    - "bind-utils"


- name: Add Required Settings for OKD Cluster to Dnsmasq
  lineinfile:
    dest: "/etc/dnsmasq.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  register: add_required_config
  with_items:
    - { regexp: "^#address=/double-click.net/127.0.0.1",    line: "address=/apps.{{ _okd.domain }}/{{ manager_ipaddr }}",        state: present }
    - { regexp: "^#domain=example.com",                     line: "domain={{ _okd.domain }}",                             state: present }


# Change DNS setting
# Replace device name or IP address to your environment
- name: CHange DNS Settings
  shell: |
    export DNS=$(nmcli device show {{ item.netdev_name }} | grep ^IP4.DNS | awk '{print $2}')
    nmcli connection modify {{ item.conn_name }} ipv4.dns "{{ manager_ipaddr1 }} $DNS"
    nmcli connection modify {{ item.conn_name }} ipv4.dns-search "{{ _okd.domain }}"
    nmcli connection up {{ item.conn_name }}
  register: config_dns_settings
  with_items:
    - { dev_ip_addr: "{{ ipaddr0 }}", netdev_name: "{{ netdev0 }}", conn_name: conn1 }
    - { dev_ip_addr: "{{ ipaddr2 }}", netdev_name: "{{ netdev2 }}", conn_name: conn3 }
- debug: msg={{ config_dns_settings }}
  when: print_debug == true


- name: Configure DNSMasq Server
  lineinfile:
    dest: "/etc/resolv.conf"
    line: "nameserver 127.0.0.1"
    insertafter: '^search*'
    state: present
  register: config_dnsmasq_server


- name: Change Search Domain
  lineinfile:
    dest: "/etc/resolv.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  register: change_search_domain
  with_items:
    - { regexp: "^search jtest.pivotal.io",  line: "search okd4.pivotal.io",  state: present }


- name: Restart DNSMasq Services
  systemd:
    name: "{{ item }}"
    state: restarted
    enabled: true
    daemon_reload: true
  register: restart_service
  until: restart_service is succeeded
  retries: 10
  delay: 10
  with_items:
    - dnsmasq
- debug: msg={{ restart_service }}
  when: print_debug == true

